{"version":3,"sources":["components/Proportion.js","App.js","reportWebVitals.js","index.js"],"names":["Proportion","props","state","newIngredient","newQuantity","newType","items","handleChange","bind","addNewItem","removeItem","changeQuantity","newItem","id","_","ingredient","this","quantity","parseFloat","type","length","push","setState","index","findIndex","item","splice","e","value","target","name","find","i","currentItem","toFixed","className","map","placeholder","onChange","onClick","selected","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4be1bd27.chunk.js","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport * as _ from 'lodash';\n\nexport class Proportion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newIngredient: '',\n      newQuantity: '',\n      newType: 'gr',\n      items: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.addNewItem = this.addNewItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.changeQuantity = this.changeQuantity.bind(this);\n  }\n\n  addNewItem() {\n    const newItem = {\n      id: _.uniqueId(),\n      ingredient: this.state.newIngredient,\n      quantity: parseFloat(this.state.newQuantity),\n      type: this.state.newType,\n      newQuantity: 0,\n    };\n\n    const items = [...this.state.items];\n\n    if (items.length) {\n      const quantity = items[0].quantity;\n      const newQuantity = items[0].newQuantity;\n      newItem.newQuantity = newItem.quantity * (newQuantity / quantity);\n    }\n\n    items.push(newItem);\n\n    this.setState({\n      newIngredient: '',\n      newQuantity: '',\n      newType: 'gr',\n      items: items,\n    });\n  }\n\n  removeItem(id) {\n    const index = this.state.items.findIndex((item) => {\n      return item.id === id;\n    });\n\n    const items = [...this.state.items];\n    items.splice(index, 1);\n\n    this.setState({\n      items,\n    });\n  }\n\n  handleChange(e) {\n    const value = e.target.value;\n    const name = e.target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  changeQuantity(e, id) {\n    const value = parseFloat(e.target.value);\n    const items = [...this.state.items];\n    const item = items.find((item) => item.id === id);\n    const newItem = item;\n    newItem.newQuantity = value;\n\n    for (let i = 0; i < items.length; i++) {\n      const currentItem = items[i];\n      if (currentItem.id === id) {\n        continue;\n      }\n\n      currentItem.newQuantity = (\n        currentItem.quantity *\n        (newItem.newQuantity / newItem.quantity)\n      ).toFixed(2);\n    }\n\n    this.setState({\n      items,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container mx-auto\">\n        <div className=\"overflow-x-auto mx-15\">\n          <h1 className=\"font-bold p-5 text-center text-lg\">Proporzioni</h1>\n          <table className=\"table w-full\">\n            <thead>\n              <tr>\n                <th>Ingrediente</th>\n                <th>Quantità</th>\n                <th>Tipo</th>\n                <th>Nuova Quantità</th>\n              </tr>\n            </thead>\n            {this.state.items.map((item) => (\n              <tbody key={item.id}>\n                <tr>\n                  <td>{item.ingredient}</td>\n                  <td>{item.quantity}</td>\n                  <td>{item.type}</td>\n                  <td>\n                    <input\n                      placeholder=\"Nuova quantità\"\n                      className=\"input has-text-danger\"\n                      name=\"editedQuantity\"\n                      type=\"number\"\n                      value={item.newQuantity}\n                      onChange={(e) => this.changeQuantity(e, item.id)}\n                    />\n                  </td>\n                  <td className=\"column\">\n                    <button\n                      className=\"btn btn-secondary\"\n                      onClick={(e) => this.removeItem(item.id)}\n                    >\n                      Rimuovi\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            ))}\n          </table>\n        </div>\n        <div className=\"container mx-auto px-10 py-10 max-w-sm\">\n          <div className=\"form-control\">\n            <label className=\"label\">\n              <span className=\"label-text\">Ingrediente</span>\n            </label>\n            <input\n              placeholder=\"\"\n              className=\"input input-bordered\"\n              type=\"text\"\n              name=\"newIngredient\"\n              value={this.state.newIngredient}\n              onChange={this.handleChange}\n            />\n            <label className=\"label\">\n              <span className=\"label-text\">Quantità</span>\n            </label>\n            <input\n              placeholder=\"Quantità\"\n              className=\"input input-bordered\"\n              type=\"number\"\n              name=\"newQuantity\"\n              value={this.state.newQuantity}\n              onChange={this.handleChange}\n            />\n            <label className=\"label\">\n              <span className=\"label-text\">Tipo</span>\n            </label>\n            <select\n              className=\"select select-bordered w-full max-w-ws\"\n              name=\"newType\"\n              value={this.state.newType}\n              onChange={this.handleChange}\n            >\n              <option selected value=\"gr\">\n                grammi\n              </option>\n              <option value=\"kg\">chilogrammi</option>\n              <option value=\"ml\">millilitri</option>\n              <option value=\"l\">litri</option>\n              <option value=\"prz\">porzioni</option>\n              <option value=\"pz\">pezzo</option>\n              <option value=\"C\">cucchiaio</option>\n              <option value=\"c\">cucchiaino</option>\n              <option value=\"tz\">tazza</option>\n            </select>\n            <button className=\"btn btn-primary my-10\" onClick={this.addNewItem}>\n              Aggiungi\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { Proportion } from \"./components/Proportion\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Proportion />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}